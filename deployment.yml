---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: javaapplication
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: samplejava
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: samplejava
    spec:
      containers:
      - name: samplejava
        image: 777500896147.dkr.ecr.ap-south-1.amazonaws.com/test1:latest
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: servicejavamodule
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/name: samplejava
---
ingress file:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: default
  name: ingress-java
  annotations:
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-south-1:777500896147:certificate/1e23fa2a-22ab-41be-828c-63836415abbb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP": 80}]'
    alb.ingress.kubernetes.io/subnets: subnet-0626a730f904cec39, subnet-08dc6903dcbd2f954, subnet-04f6f8fbbc5e3f56d
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: servicejavamodule
              port:
                number: 8080
version: 0.2
phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region ap-south-1 |  docker login --username AWS --password-stdin 777500896147.dkr.ecr.ap-south-1.amazonaws.com
      - REPOSITORY_URI=777500896147.dkr.ecr.ap-south-1.amazonaws.com/test1
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t test1 .
      - docker tag test1:latest 777500896147.dkr.ecr.ap-south-1.amazonaws.com/test1:latest
     
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push 777500896147.dkr.ecr.ap-south-1.amazonaws.com/test1:latest
      - echo Writing image definitions file...
      - echo $EKS_KUBECTL_ROLE_ARN
      - CREDENTIALS=$(aws sts assume-role --role-arn arn:aws:iam::777500896147:role/Codebuildkubectl-role --role-session-name codebuild-kubectl --duration-seconds 900)
      - export AWS_ACCESS_KEY_ID="$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId')"
      - export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
      - export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
    #   - export AWS_ACCESS_KEY_ID=$ACCESS_KEY
    #   - echo $AWS_ACCESS_KEY_ID
    #   - export AWS_SECRET_ACCESS_KEY=$SECRET_KEY
    #   - echo $AWS_SECRET_ACCESS_KEY
      - aws sts get-caller-identity 
      - aws eks update-kubeconfig --region ap-south-1 --name Cluster7
      #- cat ~/.kube/config
      #- sed -i "s/latest/$CODEBUILD_BUILD_NUMBER/g" deployment.yml
      - cat deployment.yml
      - kubectl get no
      - kubectl apply -f deployment.yml 
      #- kubectl apply -f ingress.yml -n dev  
      #- printf '[{"name":"%s","imageUri":"%s"}]' $Repository_Name-$Branch_Name-container $REPOSITORY_URI:$CODEBUILD_BUILD_NUMBER > imagedefinitions.json
